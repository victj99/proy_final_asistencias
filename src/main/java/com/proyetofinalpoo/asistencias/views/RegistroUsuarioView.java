package com.proyetofinalpoo.asistencias.views;

import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.proyetofinalpoo.asistencias.entities.Usuario;
import com.proyetofinalpoo.asistencias.models.ListItem;
import com.proyetofinalpoo.asistencias.models.Params;
import com.proyetofinalpoo.asistencias.services.SedeService;
import com.proyetofinalpoo.asistencias.services.UsuarioService;
import com.proyetofinalpoo.asistencias.utils.Constantes;
import com.proyetofinalpoo.asistencias.utils.StringUtils;

/**
 *
 * @author victortinoco
 */
@Component
public class RegistroUsuarioView extends BaseView {

    private DefaultListModel<ListItem> sedesListModel = new DefaultListModel<>();
    private Long idUsuario = null;

    @Autowired
    private UsuarioService usuarioService;

    @Autowired
    private SedeService sedeService;

    /**
     * Creates new form RegistroUsuarioView
     */
    public RegistroUsuarioView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegresar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblErrorNombres = new javax.swing.JLabel();
        lblErrorApellidos = new javax.swing.JLabel();
        lblErrorNombreUsuario = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        lblErrorContrasenia = new javax.swing.JLabel();
        txtContrasenia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSedes = new javax.swing.JList<>();
        txtBuscarSede = new javax.swing.JTextField();
        lblErrorSede = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblId.setText("Nuevo registro");

        jLabel1.setText("Nombres");

        jLabel2.setText("Apellidos");

        lblErrorNombres.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorNombres.setText("Requerido");

        lblErrorApellidos.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorApellidos.setText("Requerido");

        lblErrorNombreUsuario.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorNombreUsuario.setText("Requerido");

        jLabel3.setText("Nombre de usuario");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        lblErrorContrasenia.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorContrasenia.setText("Requerido");

        jLabel4.setText("Contrase√±a");

        listSedes.setModel(sedesListModel);
        listSedes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listSedes);

        txtBuscarSede.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarSedeKeyReleased(evt);
            }
        });

        lblErrorSede.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorSede.setText("Seleccione una sede");

        jLabel5.setText("Sede");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lblErrorNombres)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId)
                            .addComponent(jLabel3)
                            .addComponent(lblErrorNombreUsuario)
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(lblErrorApellidos)
                            .addComponent(jLabel4)
                            .addComponent(lblErrorContrasenia)
                            .addComponent(txtContrasenia))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRegistrar)
                                .addGap(156, 156, 156)
                                .addComponent(btnRegresar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBuscarSede, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblErrorSede))
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1))
                        .addGap(0, 124, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblId)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorNombres)
                    .addComponent(lblErrorApellidos))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorNombreUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorContrasenia)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarSede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorSede))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(btnRegistrar))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.abrirFormulario(BandejaUsuariosView.class);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtBuscarSedeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarSedeKeyReleased
        sedesListModel.clear();

        List<ListItem> sedesList = sedeService.listarListItemSede(txtBuscarSede.getText());
        sedesListModel.addAll(sedesList);

    }//GEN-LAST:event_txtBuscarSedeKeyReleased

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // ocultamos los textos de error
        this.ocultarTextosError();

        // Validamos los campos obligatorios
        String apellidos = txtApellidos.getText().trim();
        String contrasenia = txtContrasenia.getText().trim();
        String nombreUsuario = txtNombreUsuario.getText().trim();
        String nombres = txtNombres.getText().trim();

        ListItem sedeSeleccionada = listSedes.getSelectedValue();

        if (StringUtils.isEmpty(nombres)) {
            lblErrorNombres.setVisible(true);
            txtNombres.setBorder(Constantes.ERROR_BORDER);
            return;
        }
        if (StringUtils.isEmpty(apellidos)) {
            lblErrorApellidos.setVisible(true);
            txtApellidos.setBorder(Constantes.ERROR_BORDER);
            return;
        }
        if (StringUtils.isEmpty(nombreUsuario)) {
            lblErrorNombreUsuario.setVisible(true);
            txtNombreUsuario.setBorder(Constantes.ERROR_BORDER);
            return;
        }
        if (StringUtils.isEmpty(contrasenia) && idUsuario == null) { // La contrase√±a ser√° obligatoria solo si es un nuevo registro
            lblErrorContrasenia.setVisible(true);
            txtContrasenia.setBorder(Constantes.ERROR_BORDER);
            return;
        }

        if (sedeSeleccionada == null) {
            lblErrorSede.setVisible(true);
            return;
        }

        // registramos los datos
        int resp = JOptionPane.showConfirmDialog(rootPane, "¬øDesea registrar el usuario?", "Registrar", JOptionPane.YES_NO_OPTION);
        if (resp != JOptionPane.YES_OPTION) {
            return;
        }
        
        Usuario usuario = new Usuario(nombreUsuario, contrasenia, nombres, apellidos, Constantes.ESTADO_ACTIVO, sedeSeleccionada.getValor());
        if (idUsuario == null) {
            usuarioService.registrarDatos(usuario);
        } else {
            usuario.setIdUsuario(idUsuario);
            usuarioService.actualizarDatos(usuario);
        }

        JOptionPane.showMessageDialog(rootPane, "Registro completado", "Completado", JOptionPane.INFORMATION_MESSAGE);
        this.abrirFormulario(BandejaUsuariosView.class);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrorApellidos;
    private javax.swing.JLabel lblErrorContrasenia;
    private javax.swing.JLabel lblErrorNombreUsuario;
    private javax.swing.JLabel lblErrorNombres;
    private javax.swing.JLabel lblErrorSede;
    private javax.swing.JLabel lblId;
    private javax.swing.JList<ListItem> listSedes;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscarSede;
    private javax.swing.JTextField txtContrasenia;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

    private void ocultarTextosError() {
        lblErrorApellidos.setVisible(false);
        lblErrorContrasenia.setVisible(false);
        lblErrorSede.setVisible(false);
        lblErrorNombreUsuario.setVisible(false);
        lblErrorNombres.setVisible(false);

        txtApellidos.setBorder(Constantes.DEFAULT_BORDER);
        txtContrasenia.setBorder(Constantes.DEFAULT_BORDER);
        txtNombreUsuario.setBorder(Constantes.DEFAULT_BORDER);
        txtNombres.setBorder(Constantes.DEFAULT_BORDER);
    }

    @Override
    protected void limpiar() {
        // ocultamos los textos de error
        this.ocultarTextosError();
        txtApellidos.setText("");
        txtBuscarSede.setText("");
        txtContrasenia.setText("");
        txtNombreUsuario.setText("");
        txtNombres.setText("");
        idUsuario = null;
        lblId.setText("Nuevo registro");

        sedesListModel.clear();
    }

    @Override
    public void iniciarVentana() {
        limpiar();

        Params.IdParam param = this.viewParams.obtenerParam(Params.IdParam.class);
        if (param != null) {
            lblId.setText("ID: " + param.getValue());
            this.idUsuario = param.getValue();

            Usuario usuarioExistente = usuarioService.obtenerPorId(param.getValue());
            txtApellidos.setText(usuarioExistente.getApellido());
            txtNombreUsuario.setText(usuarioExistente.getNombreUsuario());
            txtNombres.setText(usuarioExistente.getNombre());
            txtNombreUsuario.setText(usuarioExistente.getNombreUsuario());

            if (usuarioExistente.getSede() != null) {
                String textoSede = usuarioExistente.getSede().getNombre();
                ListItem sedeItem = new ListItem(usuarioExistente.getSede().getIdSede(), textoSede);

                sedesListModel.add(0, sedeItem);
                listSedes.setSelectedIndex(0);
            }
        }
    }
}
